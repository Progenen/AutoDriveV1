class ItcSlider{static#EL_WRAPPER="wrapper";static#EL_ITEMS="items";static#EL_ITEM="item";static#EL_ITEM_ACTIVE="item-active";static#EL_INDICATOR="indicator";static#EL_INDICATOR_ACTIVE="indicator-active";static#BTN_PREV="btn-prev";static#BTN_NEXT="btn-next";static#BTN_HIDE="btn-hide";static#TRANSITION_NONE="transition-none";static#SWIPE_THRESHOLD=20;static#instances=[];#config;#state;constructor(t,e={},s="itc-slider-"){this.#state={prefix:s,el:t,elWrapper:t.querySelector("."+s+this.constructor.#EL_WRAPPER),elItems:t.querySelector("."+s+this.constructor.#EL_ITEMS),elListItem:t.querySelectorAll("."+s+this.constructor.#EL_ITEM),btnPrev:t.querySelector("."+s+this.constructor.#BTN_PREV),btnNext:t.querySelector("."+s+this.constructor.#BTN_NEXT),btnClassHide:s+this.constructor.#BTN_HIDE,exOrderMin:0,exOrderMax:0,exItemMin:null,exItemMax:null,exTranslateMin:0,exTranslateMax:0,direction:"next",intervalId:null,isSwiping:!1,swipeX:0,swipeY:0},this.#config={loop:!0,autoplay:!1,interval:5e3,refresh:!0,swipe:!0,...e},this.#init(),this.#attachEvents()}static getInstance(e){var t=this.#instances.find(t=>t.target===e);return t?t.instance:null}static getOrCreateInstance(t,e={},s="itc-slider-"){var t="string"==typeof t?document.querySelector(t):t,i=this.getInstance(t);return i||(i=new this(t,e,s),this.#instances.push({target:t,instance:i}),i)}static createInstances(){document.querySelectorAll('[data-slider="itc-slider"]').forEach(t=>{const s=t["dataset"],i={};Object.keys(s).forEach(t=>{var e;"slider"!==t&&(e="false"!==(e="true"===(e=s[t])||e)&&e,e=Number.isNaN(Number(e))?Number(e):e,i[t]=e)}),this.getOrCreateInstance(t,i)})}slideNext(){this.#state.direction="next",this.#move()}slidePrev(){this.#state.direction="prev",this.#move()}slideTo(t){this.#moveTo(t)}reset(){this.#reset()}get autoplay(){return{start:()=>{this.#config.autoplay=!0,this.#autoplay()},stop:()=>{this.#autoplay("stop"),this.#config.autoplay=!1}}}dispose(){this.#detachEvents();var t=this.#state.prefix+this.constructor.#TRANSITION_NONE;const e=this.#state.prefix+this.constructor.#EL_ITEM_ACTIVE,s=(this.#autoplay("stop"),this.#state.elItems.classList.add(t),this.#state.elItems.style.transform="",this.#state.elListItem.forEach(t=>{t.style.transform="",t.classList.remove(e)}),""+this.#state.prefix+this.constructor.#EL_INDICATOR_ACTIVE);document.querySelectorAll("."+s).forEach(t=>{t.classList.remove(s)}),this.#state.elItems.offsetHeight,this.#state.elItems.classList.remove(t);t=this.constructor.#instances.findIndex(t=>t.target===this.#state.el);this.constructor.#instances.splice(t,1)}#onClick(t){var e,s;(t.target.closest(".itc-slider-btn")||t.target.closest(".itc-slider-indicators"))&&(t.preventDefault(),e=this.#state.prefix+this.constructor.#BTN_PREV,s=this.#state.prefix+this.constructor.#BTN_NEXT,this.#autoplay("stop"),t.target.closest("."+e)||t.target.closest("."+s)?(this.#state.direction=t.target.closest("."+e)?"prev":"next",this.#move()):t.target.dataset.slideTo&&(s=parseInt(t.target.dataset.slideTo,10),this.#moveTo(s)),this.#config.loop)&&this.#autoplay()}#onMouseEnter(){this.#autoplay("stop")}#onMouseLeave(){this.#autoplay()}#onTransitionStart(){!this.#config.loop||this.#state.isBalancing||(this.#state.isBalancing=!0,window.requestAnimationFrame(()=>{this.#balanceItems(!1)}))}#onTransitionEnd(){this.#config.loop&&(this.#state.isBalancing=!1)}#onDragStart(t){t.preventDefault()}#onVisibilityChange(){"hidden"===document.visibilityState?this.#autoplay("stop"):"visible"===document.visibilityState&&this.#config.loop&&this.#autoplay()}#touchStart(t){this.#autoplay("stop");t=0===t.type.search("touch")?t.touches[0]:t;this.#state.swipeX=t.clientX,this.#state.swipeY=t.clientY,this.#state.isSwiping=!0,this.#state.isTouchMoving=!1}#touchEnd(e){if(this.#state.isSwiping){var e=0===e.type.search("touch")?e.changedTouches[0]:e,s=this.#state.elWrapper.getBoundingClientRect(),e=(e=e.clientX<s.left?s.left:e.clientX)>s.right?s.right:e;let t=this.#state.swipeX-e;if(0===t)this.#state.isSwiping=!1;else{var i=(t=!this.#config.loop&&(s=1===this.#state.activeItems[0]&&t<=0,e=this.#state.activeItems[this.#state.activeItems.length-1]&&0<=t,s||e)?0:t)/this.#state.width*100,s=this.#state.prefix+this.constructor.#TRANSITION_NONE;if(this.#state.elItems.classList.remove(s),i>this.constructor.#SWIPE_THRESHOLD){this.#state.direction="next";let t=0;for(;t<=Math.floor(Math.abs(i)-this.constructor.#SWIPE_THRESHOLD)/100;)this.#move(),t+=1}else if(i<-this.constructor.#SWIPE_THRESHOLD){this.#state.direction="prev";let t=0;for(;t<=Math.floor(Math.abs(i)-this.constructor.#SWIPE_THRESHOLD)/100;)this.#move(),t+=1}else this.#state.direction="none",this.#move();this.#state.isSwiping=!1,this.#config.loop&&this.#autoplay(),this.#state.isBalancing=!1}}}#touchMove(e){if(this.#state.isSwiping){var s=0===e.type.search("touch")?e.changedTouches[0]:e;let t=this.#state.swipeX-s.clientX;var i=this.#state.swipeY-s.clientY,a=(this.#state.prevPosX||s.clientX)>s.clientX?"next":"prev";if(this.#state.prevPosX=s.clientX,!this.#state.isTouchMoving){if(Math.abs(i)>Math.abs(t)||0===Math.abs(t))return void(this.#state.isSwiping=!1);this.#state.isTouchMoving=!0}e.preventDefault(),!this.#config.loop&&(s=1===this.#state.activeItems[0]&&t<=0,i=this.#state.activeItems[this.#state.activeItems.length-1]&&0<=t,s||i)&&(t/=4);e=this.#state.prefix+this.constructor.#TRANSITION_NONE,s=(this.#state.elItems.classList.add(e),this.#state.translate-t);this.#state.elItems.style.transform=`translate3D(${s}px, 0px, 0.1px)`,this.#config.loop&&(this.#state.direction=0<t?"next":"prev",this.#state.direction=a,window.requestAnimationFrame(()=>{this.#balanceItems(!0)}))}}#attachEvents(){this.#state.events={click:[this.#state.el,this.#onClick.bind(this),!0],mouseenter:[this.#state.el,this.#onMouseEnter.bind(this),!0],mouseleave:[this.#state.el,this.#onMouseLeave.bind(this),!0],transitionstart:[this.#state.elItems,this.#onTransitionStart.bind(this),this.#config.loop],transitionend:[this.#state.elItems,this.#onTransitionEnd.bind(this),this.#config.loop],touchstart:[this.#state.el,this.#touchStart.bind(this),this.#config.swipe],mousedown:[this.#state.el,this.#touchStart.bind(this),this.#config.swipe],touchend:[document,this.#touchEnd.bind(this),this.#config.swipe],mouseup:[document,this.#touchEnd.bind(this),this.#config.swipe],touchmove:[this.#state.el,this.#touchMove.bind(this),this.#config.swipe],mousemove:[this.#state.el,this.#touchMove.bind(this),this.#config.swipe],dragstart:[this.#state.el,this.#onDragStart.bind(this),!0],visibilitychange:[document,this.#onVisibilityChange.bind(this),!0]},Object.keys(this.#state.events).forEach(t=>{var e,s;this.#state.events[t][2]&&(e=this.#state.events[t][0],s=this.#state.events[t][1],e.addEventListener(t,s))}),new ResizeObserver(t=>{window.requestAnimationFrame(this.#reset.bind(this))}).observe(this.#state.elWrapper)}#detachEvents(){Object.keys(this.#state.events).forEach(t=>{var e,s;this.#state.events[t][2]&&(e=this.#state.events[t][0],s=this.#state.events[t][1],e.removeEventListener(t,s))})}#autoplay(t){this.#config.autoplay&&("stop"===t?(clearInterval(this.#state.intervalId),this.#state.intervalId=null):null===this.#state.intervalId&&(this.#state.intervalId=setInterval(()=>{this.#state.direction="next",this.#move()},this.#config.interval)))}#balanceItems(t=!1){var e,s,i,a,n;(this.#state.isBalancing||t)&&(s=(e=this.#state.elWrapper.getBoundingClientRect()).width/this.#state.countActiveItems/2,i=this.#state.elListItem.length,"next"===this.#state.direction?this.#state.exItemMin.getBoundingClientRect().right<e.left-s&&((a=this.#state.els.find(t=>t.el===this.#state.exItemMin)).order=this.#state.exOrderMin+i,n=this.#state.exTranslateMin+i*this.#state.width,a.translate=n,this.#state.exItemMin.style.transform=`translate3D(${n}px, 0px, 0.1px)`,this.#updateExProperties()):this.#state.exItemMax.getBoundingClientRect().left>e.right+s&&((a=this.#state.els.find(t=>t.el===this.#state.exItemMax)).order=this.#state.exOrderMax-i,n=this.#state.exTranslateMax-i*this.#state.width,a.translate=n,this.#state.exItemMax.style.transform=`translate3D(${n}px, 0px, 0.1px)`,this.#updateExProperties()),t||window.requestAnimationFrame(()=>{this.#balanceItems(!1)}))}#updateClasses(){const i=this.#state.prefix+this.constructor.#EL_ITEM_ACTIVE;this.#state.activeItems.forEach((t,e)=>{t?this.#state.elListItem[e].classList.add(i):this.#state.elListItem[e].classList.remove(i);var s=this.#state.el.querySelectorAll("."+this.#state.prefix+this.constructor.#EL_INDICATOR);s.length&&t?s[e].classList.add(""+this.#state.prefix+this.constructor.#EL_INDICATOR_ACTIVE):s.length&&!t&&s[e].classList.remove(""+this.#state.prefix+this.constructor.#EL_INDICATOR_ACTIVE)})}#move(){if("none"===this.#state.direction){const e=this.#state.translate;void(this.#state.elItems.style.transform=`translate3D(${e}px, 0px, 0.1px)`)}else{var t="next"===this.#state.direction?-this.#state.width:this.#state.width;const e=this.#state.translate+t;if(!this.#config.loop){t=this.#state.width*(this.#state.elListItem.length-this.#state.countActiveItems);if(e<-t||0<e)return;this.#state.btnPrev&&(this.#state.btnPrev.classList.remove(this.#state.btnClassHide),this.#state.btnNext.classList.remove(this.#state.btnClassHide)),this.#state.btnPrev&&e===-t?this.#state.btnNext.classList.add(this.#state.btnClassHide):this.#state.btnPrev&&0===e&&this.#state.btnPrev.classList.add(this.#state.btnClassHide)}"next"===this.#state.direction?this.#state.activeItems=[...this.#state.activeItems.slice(-1),...this.#state.activeItems.slice(0,-1)]:this.#state.activeItems=[...this.#state.activeItems.slice(1),...this.#state.activeItems.slice(0,1)],this.#updateClasses(),this.#state.translate=e,this.#state.elItems.style.transform=`translate3D(${e}px, 0px, 0.1px)`}}#moveTo(i){var e=this.#state.activeItems.reduce((t,e,s)=>{e=e?i-s:t;return Math.abs(e)<Math.abs(t)?e:t},this.#state.activeItems.length);if(0!==e){this.#state.direction=0<e?"next":"prev";for(let t=0;t<Math.abs(e);t++)this.#move()}}#init(){this.#state.els=[],this.#state.translate=0,this.#state.activeItems=[],this.#state.isBalancing=!1;var t,e=parseFloat(getComputedStyle(this.#state.elItems).gap)||0,e=(this.#state.width=this.#state.elListItem[0].getBoundingClientRect().width+e,this.#state.elWrapper.getBoundingClientRect().width);this.#state.countActiveItems=Math.round(e/this.#state.width),this.#state.elListItem.forEach((t,e)=>{t.style.transform="",this.#state.activeItems.push(e<this.#state.countActiveItems?1:0),this.#state.els.push({el:t,index:e,order:e,translate:0})}),this.#config.loop?(t=-(1+(e=this.#state.elListItem.length-1))*this.#state.width,this.#state.elListItem[e].style.transform=`translate3D(${t}px, 0px, 0.1px)`,this.#state.els[e].order=-1,this.#state.els[e].translate=t,this.#updateExProperties()):this.#state.btnPrev&&this.#state.btnPrev.classList.add(this.#state.btnClassHide),this.#updateClasses(),this.#autoplay()}#reset(){const t=this.#state.prefix+this.constructor.#TRANSITION_NONE;var e=parseFloat(getComputedStyle(this.#state.elItems).gap)||0,e=this.#state.elListItem[0].getBoundingClientRect().width+e,s=this.#state.elWrapper.getBoundingClientRect().width,s=Math.round(s/e);e===this.#state.width&&s===this.#state.countActiveItems||(this.#autoplay("stop"),this.#state.elItems.classList.add(t),this.#state.elItems.style.transform="translate3D(0px, 0px, 0.1px)",this.#init(),window.requestAnimationFrame(()=>{this.#state.elItems.classList.remove(t)}))}#updateExProperties(){var t=this.#state.els.map(t=>t.el),e=this.#state.els.map(t=>t.order),s=(this.#state.exOrderMin=Math.min(...e),this.#state.exOrderMax=Math.max(...e),e.indexOf(this.#state.exOrderMin)),e=e.indexOf(this.#state.exOrderMax);this.#state.exItemMin=t[s],this.#state.exItemMax=t[e],this.#state.exTranslateMin=this.#state.els[s].translate,this.#state.exTranslateMax=this.#state.els[e].translate}}ItcSlider.createInstances(),document.addEventListener("DOMContentLoaded",function(){const t=document.querySelector(".header__burger"),e=document.querySelector(".header__col--menu");var s=document.querySelector("header");e.style.top=s.clientHeight+10+"px",t.addEventListener("click",()=>{t.classList.toggle("active"),e.classList.toggle("active"),document.body.classList.toggle("lock")}),window.innerWidth});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
